/// <reference types="react" />
import * as THREE from 'three'
import { SharedCanvasContext, RenderCallback, Camera } from './canvas'
export declare function useFrame(callback: RenderCallback, renderPriority?: number): void
export declare function useRender(callback: RenderCallback, takeOver: boolean): void
export declare function useThree(): SharedCanvasContext
export declare function useUpdate<T>(
  callback: (props: T) => void,
  dependents: any[],
  optionalRef?: React.MutableRefObject<T>
): React.MutableRefObject<any>
export declare function useResource<T>(optionalRef?: React.MutableRefObject<T>): [React.MutableRefObject<T>, T]
declare type Extensions = (loader: THREE.Loader) => void
export declare function useLoader<T>(Proto: THREE.Loader, url: string | string[], extensions?: Extensions): T
export declare function useCamera(
  camera: Camera,
  props?: Partial<THREE.Raycaster>
): (_: THREE.Raycaster, intersects: THREE.Intersection[]) => void
export {}
